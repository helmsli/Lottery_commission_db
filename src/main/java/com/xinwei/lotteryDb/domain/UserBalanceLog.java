package com.xinwei.lotteryDb.domain;

import java.io.Serializable;
import java.util.Calendar;
import java.util.Date;

import org.apache.commons.lang.builder.ToStringBuilder;

/**
 * Model class of user_balanceLog.
 * 
 * @author generated by ERMaster
 * @version $Id$
 */

public class UserBalanceLog implements Serializable {

	/** serialVersionUID. */
	private static final long serialVersionUID = 1L;

	/** 用户的UID. */
	private long userId;

	/** 最后更新时间. */
	private Date updatetime;

	/** 事物号. */
	private String transaction;

	/**事务发生时间*/
	private Date transactionTime;

	/** 更新来源. */
	private String updatesource;

	/** 操作前余额. */
	private double beginningbalance;

	/** 操作前的有效期. */
	private Date beginningexpiretimes;

	/** 转账金额. */
	private double amount;

	/** 备注. */
	private String remark;

	/**
	 * Constructor.
	 */
	public UserBalanceLog() {
	}

	/**
	 * Set the 用户的UID.
	 * 
	 * @param userId
	 *            用户的UID
	 */
	public void setUserId(long userId) {
		this.userId = userId;
	}

	/**
	 * Get the 用户的UID.
	 * 
	 * @return 用户的UID
	 */
	public long getUserId() {
		return this.userId;
	}

	/**
	 * Set the 最后更新时间.
	 * 
	 * @param updatetime
	 *            最后更新时间
	 */
	public void setUpdatetime(Date updatetime) {
		if (updatetime == null) {
			return;
		}
		try {
			Calendar localCalendar = Calendar.getInstance();
			localCalendar.setTime(updatetime);
			localCalendar.set(Calendar.MILLISECOND, 0);
			this.updatetime = localCalendar.getTime();
		} catch (Exception e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}

	/**
	 * Get the 最后更新时间.
	 * 
	 * @return 最后更新时间
	 */
	public Date getUpdatetime() {
		return this.updatetime;
	}

	/**
	 * Set the 事物号.
	 * 
	 * @param transaction
	 *            事物号
	 */
	public void setTransaction(String transaction) {
		this.transaction = transaction;
	}

	/**
	 * Get the 事物号.
	 * 
	 * @return 事物号
	 */
	public String getTransaction() {
		return this.transaction;
	}

	/**
	 * Set the 更新来源.
	 * 
	 * @param updatesource
	 *            更新来源
	 */
	public void setUpdatesource(String updatesource) {
		this.updatesource = updatesource;
	}

	/**
	 * Get the 更新来源.
	 * 
	 * @return 更新来源
	 */
	public String getUpdatesource() {
		return this.updatesource;
	}

	/**
	 * Set the 操作前余额.
	 * 
	 * @param beginningbalance
	 *            操作前余额
	 */
	public void setBeginningbalance(double beginningbalance) {
		this.beginningbalance = beginningbalance;
	}

	/**
	 * Get the 操作前余额.
	 * 
	 * @return 操作前余额
	 */
	public double getBeginningbalance() {
		return this.beginningbalance;
	}

	/**
	 * Set the 操作前的有效期.
	 * 
	 * @param beginningexpiretimes
	 *            操作前的有效期
	 */
	public void setBeginningexpiretimes(Date beginningexpiretimes) {
		this.beginningexpiretimes = beginningexpiretimes;
	}

	/**
	 * Get the 操作前的有效期.
	 * 
	 * @return 操作前的有效期
	 */
	public Date getBeginningexpiretimes() {
		return this.beginningexpiretimes;
	}

	/**
	 * Set the 转账金额.
	 * 
	 * @param amount
	 *            转账金额
	 */
	public void setAmount(double amount) {
		this.amount = amount;
	}

	/**
	 * Get the 转账金额.
	 * 
	 * @return 转账金额
	 */
	public double getAmount() {
		return this.amount;
	}

	/**
	 * Set the 备注.
	 * 
	 * @param remark
	 *            备注
	 */
	public void setRemark(String remark) {
		this.remark = remark;
	}

	/**
	 * Get the 备注.
	 * 
	 * @return 备注
	 */
	public String getRemark() {
		return this.remark;
	}

	/**
	 * 
	 * @return
	 */
	public Date getTransactionTime() {
		return transactionTime;
	}

	/**
	 * 
	 * @param transactionTime
	 */
	public void setTransactionTime(Date transactionTime) {
		if (transactionTime == null) {
			return;
		}
		try {
			Calendar localCalendar = Calendar.getInstance();
			localCalendar.setTime(transactionTime);
			localCalendar.set(Calendar.MILLISECOND, 0);
			this.transactionTime = localCalendar.getTime();
		} catch (Exception e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}

	public String toString() {
		return ToStringBuilder.reflectionToString(this);
	}

}
